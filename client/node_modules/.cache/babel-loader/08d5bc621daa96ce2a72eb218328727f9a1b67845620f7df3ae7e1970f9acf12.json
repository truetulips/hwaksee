{"ast":null,"code":"var _jsxFileName = \"D:\\\\creative\\\\react\\\\hwaksee\\\\client\\\\src\\\\components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from '../api/axios';\nimport styles from '../css/Form.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm({\n  onLogin\n}) {\n  _s();\n  const [form, setForm] = useState({\n    phone: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n\n  // ✅ 계정 정리 조건: 거래 완료된 글만 남아있을 때\n  const checkUserPosts = async token => {\n    try {\n      const res = await axios.get('/posts/my', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const posts = res.data;\n      const hasActivePost = posts.some(post => {\n        const matched = post.matcher !== null;\n        const buyerDone = post.buyerStatus === '완료';\n        const sellerDone = post.sellerStatus === '완료';\n        return matched && (!buyerDone || !sellerDone);\n      });\n      if (!hasActivePost) {\n        await axios.patch('/users/mark-inactive', {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('🕒 계정 정리 예약됨 (거래 완료된 글만 존재)');\n      }\n    } catch (err) {\n      console.warn('⚠️ 계정 정리 확인 실패:', err.message);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('/auth/login', form);\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      onLogin(user);\n      navigate('/');\n      await checkUserPosts(token);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const msg = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message;\n      if (msg === '존재하지 않는 사용자입니다.') {\n        setError(msg); // 그대로 출력\n      } else if (msg === '비밀번호가 틀렸습니다.') {\n        setError(msg);\n      } else {\n        setError(msg || '로그인 중 오류가 발생했습니다.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.form,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.regFormbox,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phone\",\n          placeholder: \"\\uC804\\uD654\\uBC88\\uD638\",\n          value: form.phone,\n          onChange: handleChange,\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.passwordWrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'text' : 'password',\n            name: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            value: form.password,\n            onChange: handleChange,\n            required: true,\n            className: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setShowPassword(prev => !prev),\n            className: styles.toggle,\n            children: showPassword ? '🙈 숨기기' : '👁️ 암호보기'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"0Ix6WxobDJW/Ptr7D4kPG0NFfc4=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","useNavigate","axios","styles","jsxDEV","_jsxDEV","LoginForm","onLogin","_s","form","setForm","phone","password","error","setError","showPassword","setShowPassword","navigate","checkUserPosts","token","res","get","headers","Authorization","posts","data","hasActivePost","some","post","matched","matcher","buyerDone","buyerStatus","sellerDone","sellerStatus","patch","console","log","err","warn","message","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","user","localStorage","setItem","_err$response","_err$response$data","msg","response","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","regFormbox","type","placeholder","onChange","required","input","passwordWrapper","onClick","toggle","_c","$RefreshReg$"],"sources":["D:/creative/react/hwaksee/client/src/components/LoginForm.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from '../api/axios';\r\nimport styles from '../css/Form.module.css';\r\n\r\nexport default function LoginForm({ onLogin }) {\r\n  const [form, setForm] = useState({ phone: '', password: '' });\r\n  const [error, setError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ 계정 정리 조건: 거래 완료된 글만 남아있을 때\r\n  const checkUserPosts = async (token) => {\r\n    try {\r\n      const res = await axios.get('/posts/my', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      const posts = res.data;\r\n\r\n      const hasActivePost = posts.some(post => {\r\n        const matched = post.matcher !== null;\r\n        const buyerDone = post.buyerStatus === '완료';\r\n        const sellerDone = post.sellerStatus === '완료';\r\n        return matched && (!buyerDone || !sellerDone);\r\n      });\r\n\r\n      if (!hasActivePost) {\r\n        await axios.patch('/users/mark-inactive', {}, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        console.log('🕒 계정 정리 예약됨 (거래 완료된 글만 존재)');\r\n      }\r\n    } catch (err) {\r\n      console.warn('⚠️ 계정 정리 확인 실패:', err.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(prev => ({ ...prev, [name]: value }));\r\n    setError('');\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('/auth/login', form);\r\n      const { token, user } = res.data;\r\n\r\n      localStorage.setItem('token', token);\r\n      onLogin(user);\r\n      navigate('/');\r\n\r\n      await checkUserPosts(token);\r\n    } catch (err) {\r\n      const msg = err.response?.data?.message;\r\n      if (msg === '존재하지 않는 사용자입니다.') {\r\n        setError(msg); // 그대로 출력\r\n      } else if (msg === '비밀번호가 틀렸습니다.') {\r\n        setError(msg);\r\n      } else {\r\n        setError(msg || '로그인 중 오류가 발생했습니다.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <section>\r\n        <h2>로그인</h2>\r\n\r\n        <div className={styles.regFormbox}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            placeholder=\"전화번호\"\r\n            value={form.phone}\r\n            onChange={handleChange}\r\n            required\r\n            className={styles.input}\r\n          />\r\n\r\n          <div className={styles.passwordWrapper}>\r\n            <input\r\n              type={showPassword ? 'text' : 'password'}\r\n              name=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              value={form.password}\r\n              onChange={handleChange}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowPassword(prev => !prev)}\r\n              className={styles.toggle}\r\n            >\r\n              {showPassword ? '🙈 숨기기' : '👁️ 암호보기'}\r\n            </button>\r\n          </div>\r\n\r\n          {error && <div className={styles.error}>{error}</div>}\r\n\r\n          <button type=\"submit\">로그인</button>\r\n        </div>\r\n      </section>\r\n    </form>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAAEW,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC7D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMiB,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,WAAW,EAAE;QACvCC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUJ,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEF,MAAMK,KAAK,GAAGJ,GAAG,CAACK,IAAI;MAEtB,MAAMC,aAAa,GAAGF,KAAK,CAACG,IAAI,CAACC,IAAI,IAAI;QACvC,MAAMC,OAAO,GAAGD,IAAI,CAACE,OAAO,KAAK,IAAI;QACrC,MAAMC,SAAS,GAAGH,IAAI,CAACI,WAAW,KAAK,IAAI;QAC3C,MAAMC,UAAU,GAAGL,IAAI,CAACM,YAAY,KAAK,IAAI;QAC7C,OAAOL,OAAO,KAAK,CAACE,SAAS,IAAI,CAACE,UAAU,CAAC;MAC/C,CAAC,CAAC;MAEF,IAAI,CAACP,aAAa,EAAE;QAClB,MAAMxB,KAAK,CAACiC,KAAK,CAAC,sBAAsB,EAAE,CAAC,CAAC,EAAE;UAC5Cb,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUJ,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFiB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZF,OAAO,CAACG,IAAI,CAAC,iBAAiB,EAAED,GAAG,CAACE,OAAO,CAAC;IAC9C;EACF,CAAC;EAED,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCnC,OAAO,CAACoC,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;IAC7C9B,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMiC,YAAY,GAAG,MAAML,CAAC,IAAI;IAC9BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAM5B,GAAG,GAAG,MAAMlB,KAAK,CAAC0B,IAAI,CAAC,aAAa,EAAEnB,IAAI,CAAC;MACjD,MAAM;QAAEU,KAAK;QAAE8B;MAAK,CAAC,GAAG7B,GAAG,CAACK,IAAI;MAEhCyB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEhC,KAAK,CAAC;MACpCZ,OAAO,CAAC0C,IAAI,CAAC;MACbhC,QAAQ,CAAC,GAAG,CAAC;MAEb,MAAMC,cAAc,CAACC,KAAK,CAAC;IAC7B,CAAC,CAAC,OAAOmB,GAAG,EAAE;MAAA,IAAAc,aAAA,EAAAC,kBAAA;MACZ,MAAMC,GAAG,IAAAF,aAAA,GAAGd,GAAG,CAACiB,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAc3B,IAAI,cAAA4B,kBAAA,uBAAlBA,kBAAA,CAAoBb,OAAO;MACvC,IAAIc,GAAG,KAAK,iBAAiB,EAAE;QAC7BxC,QAAQ,CAACwC,GAAG,CAAC,CAAC,CAAC;MACjB,CAAC,MAAM,IAAIA,GAAG,KAAK,cAAc,EAAE;QACjCxC,QAAQ,CAACwC,GAAG,CAAC;MACf,CAAC,MAAM;QACLxC,QAAQ,CAACwC,GAAG,IAAI,mBAAmB,CAAC;MACtC;IACF;EACF,CAAC;EAED,oBACEjD,OAAA;IAAMmD,QAAQ,EAAET,YAAa;IAACU,SAAS,EAAEtD,MAAM,CAACM,IAAK;IAAAiD,QAAA,eACnDrD,OAAA;MAAAqD,QAAA,gBACErD,OAAA;QAAAqD,QAAA,EAAI;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEZzD,OAAA;QAAKoD,SAAS,EAAEtD,MAAM,CAAC4D,UAAW;QAAAL,QAAA,gBAChCrD,OAAA;UACE2D,IAAI,EAAC,MAAM;UACXrB,IAAI,EAAC,OAAO;UACZsB,WAAW,EAAC,0BAAM;UAClBrB,KAAK,EAAEnC,IAAI,CAACE,KAAM;UAClBuD,QAAQ,EAAEzB,YAAa;UACvB0B,QAAQ;UACRV,SAAS,EAAEtD,MAAM,CAACiE;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eAEFzD,OAAA;UAAKoD,SAAS,EAAEtD,MAAM,CAACkE,eAAgB;UAAAX,QAAA,gBACrCrD,OAAA;YACE2D,IAAI,EAAEjD,YAAY,GAAG,MAAM,GAAG,UAAW;YACzC4B,IAAI,EAAC,UAAU;YACfsB,WAAW,EAAC,0BAAM;YAClBrB,KAAK,EAAEnC,IAAI,CAACG,QAAS;YACrBsD,QAAQ,EAAEzB,YAAa;YACvB0B,QAAQ;YACRV,SAAS,EAAEtD,MAAM,CAACiE;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACFzD,OAAA;YACE2D,IAAI,EAAC,QAAQ;YACbM,OAAO,EAAEA,CAAA,KAAMtD,eAAe,CAAC8B,IAAI,IAAI,CAACA,IAAI,CAAE;YAC9CW,SAAS,EAAEtD,MAAM,CAACoE,MAAO;YAAAb,QAAA,EAExB3C,YAAY,GAAG,QAAQ,GAAG;UAAU;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAELjD,KAAK,iBAAIR,OAAA;UAAKoD,SAAS,EAAEtD,MAAM,CAACU,KAAM;UAAA6C,QAAA,EAAE7C;QAAK;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAErDzD,OAAA;UAAQ2D,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEX;AAACtD,EAAA,CAxGuBF,SAAS;EAAA,QAIdL,WAAW;AAAA;AAAAuE,EAAA,GAJNlE,SAAS;AAAA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}