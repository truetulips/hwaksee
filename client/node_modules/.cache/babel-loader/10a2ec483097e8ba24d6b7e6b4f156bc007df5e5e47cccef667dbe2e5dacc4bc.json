{"ast":null,"code":"import { getFeeRate } from './fee';\nexport function getFeeSummary({\n  price,\n  feeResponsibility,\n  paymentMethod\n}) {\n  const base = parseInt(price, 10);\n  if (isNaN(base)) return null;\n  const rate = getFeeRate(base);\n  const feeAmount = Math.floor(base * rate);\n  const isCard = paymentMethod === 'pay';\n  let buyerAmount = base;\n  let sellerAmount = base;\n  let totalAmount = base;\n\n  // 네이버페이 일반등급 수수료+부가세 3.6%\n  if (feeResponsibility === 'seller') {\n    sellerAmount = base - feeAmount;\n    buyerAmount = isCard ? Math.floor(base * 1.036) : base;\n    totalAmount = buyerAmount;\n  } else if (feeResponsibility === 'buyer') {\n    buyerAmount = isCard ? Math.floor((base + feeAmount) * 1.036) : base + feeAmount;\n    sellerAmount = base;\n    totalAmount = buyerAmount;\n  } else if (feeResponsibility === 'split') {\n    const halfFee = Math.floor(feeAmount / 2);\n    buyerAmount = isCard ? Math.floor((base + halfFee) * 1.036) : base + halfFee;\n    sellerAmount = base - halfFee;\n    totalAmount = buyerAmount;\n  }\n  return {\n    buyerAmount,\n    sellerAmount,\n    totalAmount,\n    feeAmount\n  };\n}","map":{"version":3,"names":["getFeeRate","getFeeSummary","price","feeResponsibility","paymentMethod","base","parseInt","isNaN","rate","feeAmount","Math","floor","isCard","buyerAmount","sellerAmount","totalAmount","halfFee"],"sources":["D:/creative/react/hwaksee/client/src/utils/feeSummary.js"],"sourcesContent":["import { getFeeRate } from './fee';\r\n\r\nexport function getFeeSummary({ price, feeResponsibility, paymentMethod }) {\r\n  const base = parseInt(price, 10);\r\n  if (isNaN(base)) return null;\r\n\r\n  const rate = getFeeRate(base);\r\n  const feeAmount = Math.floor(base * rate);\r\n  const isCard = paymentMethod === 'pay';\r\n\r\n  let buyerAmount = base;\r\n  let sellerAmount = base;\r\n  let totalAmount = base;\r\n\r\n  // 네이버페이 일반등급 수수료+부가세 3.6%\r\n  if (feeResponsibility === 'seller') {\r\n    sellerAmount = base - feeAmount;\r\n    buyerAmount = isCard ? Math.floor(base * 1.036) : base;\r\n    totalAmount = buyerAmount;\r\n  } else if (feeResponsibility === 'buyer') {\r\n    buyerAmount = isCard ? Math.floor((base + feeAmount) * 1.036) : base + feeAmount;\r\n    sellerAmount = base;\r\n    totalAmount = buyerAmount;\r\n  } else if (feeResponsibility === 'split') {\r\n    const halfFee = Math.floor(feeAmount / 2);\r\n    buyerAmount = isCard ? Math.floor((base + halfFee) * 1.036) : base + halfFee;\r\n    sellerAmount = base - halfFee;\r\n    totalAmount = buyerAmount;\r\n  }\r\n\r\n  return { buyerAmount, sellerAmount, totalAmount, feeAmount };\r\n}"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,OAAO,SAASC,aAAaA,CAAC;EAAEC,KAAK;EAAEC,iBAAiB;EAAEC;AAAc,CAAC,EAAE;EACzE,MAAMC,IAAI,GAAGC,QAAQ,CAACJ,KAAK,EAAE,EAAE,CAAC;EAChC,IAAIK,KAAK,CAACF,IAAI,CAAC,EAAE,OAAO,IAAI;EAE5B,MAAMG,IAAI,GAAGR,UAAU,CAACK,IAAI,CAAC;EAC7B,MAAMI,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACN,IAAI,GAAGG,IAAI,CAAC;EACzC,MAAMI,MAAM,GAAGR,aAAa,KAAK,KAAK;EAEtC,IAAIS,WAAW,GAAGR,IAAI;EACtB,IAAIS,YAAY,GAAGT,IAAI;EACvB,IAAIU,WAAW,GAAGV,IAAI;;EAEtB;EACA,IAAIF,iBAAiB,KAAK,QAAQ,EAAE;IAClCW,YAAY,GAAGT,IAAI,GAAGI,SAAS;IAC/BI,WAAW,GAAGD,MAAM,GAAGF,IAAI,CAACC,KAAK,CAACN,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI;IACtDU,WAAW,GAAGF,WAAW;EAC3B,CAAC,MAAM,IAAIV,iBAAiB,KAAK,OAAO,EAAE;IACxCU,WAAW,GAAGD,MAAM,GAAGF,IAAI,CAACC,KAAK,CAAC,CAACN,IAAI,GAAGI,SAAS,IAAI,KAAK,CAAC,GAAGJ,IAAI,GAAGI,SAAS;IAChFK,YAAY,GAAGT,IAAI;IACnBU,WAAW,GAAGF,WAAW;EAC3B,CAAC,MAAM,IAAIV,iBAAiB,KAAK,OAAO,EAAE;IACxC,MAAMa,OAAO,GAAGN,IAAI,CAACC,KAAK,CAACF,SAAS,GAAG,CAAC,CAAC;IACzCI,WAAW,GAAGD,MAAM,GAAGF,IAAI,CAACC,KAAK,CAAC,CAACN,IAAI,GAAGW,OAAO,IAAI,KAAK,CAAC,GAAGX,IAAI,GAAGW,OAAO;IAC5EF,YAAY,GAAGT,IAAI,GAAGW,OAAO;IAC7BD,WAAW,GAAGF,WAAW;EAC3B;EAEA,OAAO;IAAEA,WAAW;IAAEC,YAAY;IAAEC,WAAW;IAAEN;EAAU,CAAC;AAC9D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}