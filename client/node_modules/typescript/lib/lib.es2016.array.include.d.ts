/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */


<<<<<<< HEAD

/// <reference no-default-lib="true"/>


=======
/// <reference no-default-lib="true"/>

>>>>>>> 40c23d38 (Branching point: refs/remotes/origin/main)
interface Array<T> {
    /**
     * Determines whether an array includes a certain element, returning true or false as appropriate.
     * @param searchElement The element to search for.
     * @param fromIndex The position in this array at which to begin searching for searchElement.
     */
    includes(searchElement: T, fromIndex?: number): boolean;
}

interface ReadonlyArray<T> {
    /**
     * Determines whether an array includes a certain element, returning true or false as appropriate.
     * @param searchElement The element to search for.
     * @param fromIndex The position in this array at which to begin searching for searchElement.
     */
    includes(searchElement: T, fromIndex?: number): boolean;
}

<<<<<<< HEAD
interface Int8Array {
=======
interface Int8Array<TArrayBuffer extends ArrayBufferLike> {
>>>>>>> 40c23d38 (Branching point: refs/remotes/origin/main)
    /**
     * Determines whether an array includes a certain element, returning true or false as appropriate.
     * @param searchElement The element to search for.
     * @param fromIndex The position in this array at which to begin searching for searchElement.
     */
    includes(searchElement: number, fromIndex?: number): boolean;
}

<<<<<<< HEAD
interface Uint8Array {
=======
interface Uint8Array<TArrayBuffer extends ArrayBufferLike> {
>>>>>>> 40c23d38 (Branching point: refs/remotes/origin/main)
    /**
     * Determines whether an array includes a certain element, returning true or false as appropriate.
     * @param searchElement The element to search for.
     * @param fromIndex The position in this array at which to begin searching for searchElement.
     */
    includes(searchElement: number, fromIndex?: number): boolean;
}

<<<<<<< HEAD
interface Uint8ClampedArray {
=======
interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike> {
>>>>>>> 40c23d38 (Branching point: refs/remotes/origin/main)
    /**
     * Determines whether an array includes a certain element, returning true or false as appropriate.
     * @param searchElement The element to search for.
     * @param fromIndex The position in this array at which to begin searching for searchElement.
     */
    includes(searchElement: number, fromIndex?: number): boolean;
}

<<<<<<< HEAD
interface Int16Array {
=======
interface Int16Array<TArrayBuffer extends ArrayBufferLike> {
>>>>>>> 40c23d38 (Branching point: refs/remotes/origin/main)
    /**
     * Determines whether an array includes a certain element, returning true or false as appropriate.
     * @param searchElement The element to search for.
     * @param fromIndex The position in this array at which to begin searching for searchElement.
     */
    includes(searchElement: number, fromIndex?: number): boolean;
}

<<<<<<< HEAD
interface Uint16Array {
=======
interface Uint16Array<TArrayBuffer extends ArrayBufferLike> {
>>>>>>> 40c23d38 (Branching point: refs/remotes/origin/main)
    /**
     * Determines whether an array includes a certain element, returning true or false as appropriate.
     * @param searchElement The element to search for.
     * @param fromIndex The position in this array at which to begin searching for searchElement.
     */
    includes(searchElement: number, fromIndex?: number): boolean;
}

<<<<<<< HEAD
interface Int32Array {
=======
interface Int32Array<TArrayBuffer extends ArrayBufferLike> {
>>>>>>> 40c23d38 (Branching point: refs/remotes/origin/main)
    /**
     * Determines whether an array includes a certain element, returning true or false as appropriate.
     * @param searchElement The element to search for.
     * @param fromIndex The position in this array at which to begin searching for searchElement.
     */
    includes(searchElement: number, fromIndex?: number): boolean;
}

<<<<<<< HEAD
interface Uint32Array {
=======
interface Uint32Array<TArrayBuffer extends ArrayBufferLike> {
>>>>>>> 40c23d38 (Branching point: refs/remotes/origin/main)
    /**
     * Determines whether an array includes a certain element, returning true or false as appropriate.
     * @param searchElement The element to search for.
     * @param fromIndex The position in this array at which to begin searching for searchElement.
     */
    includes(searchElement: number, fromIndex?: number): boolean;
}

<<<<<<< HEAD
interface Float32Array {
=======
interface Float32Array<TArrayBuffer extends ArrayBufferLike> {
>>>>>>> 40c23d38 (Branching point: refs/remotes/origin/main)
    /**
     * Determines whether an array includes a certain element, returning true or false as appropriate.
     * @param searchElement The element to search for.
     * @param fromIndex The position in this array at which to begin searching for searchElement.
     */
    includes(searchElement: number, fromIndex?: number): boolean;
}

<<<<<<< HEAD
interface Float64Array {
=======
interface Float64Array<TArrayBuffer extends ArrayBufferLike> {
>>>>>>> 40c23d38 (Branching point: refs/remotes/origin/main)
    /**
     * Determines whether an array includes a certain element, returning true or false as appropriate.
     * @param searchElement The element to search for.
     * @param fromIndex The position in this array at which to begin searching for searchElement.
     */
    includes(searchElement: number, fromIndex?: number): boolean;
<<<<<<< HEAD
}
=======
}
>>>>>>> 40c23d38 (Branching point: refs/remotes/origin/main)
